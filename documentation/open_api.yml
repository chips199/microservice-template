openapi: "3.0.0"
info:
  version: 1.0.0
  title: Survey API
paths:
    /surveys:
      get:
        summary: get List of surveys
        operationId: getListSurveys
        tags:
          - survey
        parameters:
          - name: survey_number
            in: query
            required: false
            schema:
              type: integer
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Surveys'
      post:
        summary: create Survey
        operationId: createSurvey
        tags:
          - survey
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSurveyRequest'
        responses:
          '201':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Survey'
    /surveys/{survey-id}:
      get:
          summary: get Survey
          operationId: getSurvey
          tags:
            - survey
          parameters:
            - name: survey-id
              in: path
              required: true
              schema:
                type: integer
          responses:
            '200':
              description: Success
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Survey'
      delete:
        summary: delete Survey
        operationId: deleteSurvey
        tags:
          - survey
        parameters:
          - name: survey-id
            in: path
            required: true
            schema:
              type: integer
        responses:
          '204':
            description: Success
      
      put:
        summary: Update/Publish Survey
        operationId: updateSurvey
        tags:
          - survey
        parameters:
          - name: survey-id
            in: path
            required: true
            schema:
              type: integer
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
        responses:
          '201':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Survey'

    
    /surveys/{survey-id}/questions:
      get:
        summary: get List of Questions
        operationId: getListQuestions
        tags:
          - question
        parameters:
          - name: survey-id
            in: path
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/QuestionOpenEnds'
                    - $ref: '#/components/schemas/QuestionMultipleChoices'
                    - $ref: '#/components/schemas/QuestionRatings'
      post:
        summary: create Question
        operationId: createQuestion
        tags:
          - question
        parameters:
          - name: survey-id
            in: path
            required: true
            schema:
              type: integer
        requestBody:
          content:
            application/json:
              schema:
                  oneOf:
                    - $ref: '#/components/schemas/QuestionOpenEnds'
                    - $ref: '#/components/schemas/QuestionMultipleChoices'
                    - $ref: '#/components/schemas/QuestionRatings'
        responses:
          '201':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Question'
    /surveys/{survey-id}/questions/{question-id}:
      get:
        summary: get Question
        operationId: getQuestion
        tags:
          - question
        parameters:
          - name: survey-id
            in: path
            required: true
            schema:
              type: integer
          - name: question-id
            in: path
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/QuestionOpenEnd'
                    - $ref: '#/components/schemas/QuestionMultipleChoice'
                    - $ref: '#/components/schemas/QuestionRating'
      delete:
        summary: delete Question
        operationId: deleteQuestion
        tags:
          - question
        parameters:
          - name: survey-id
            in: path
            required: true
            schema:
              type: integer
          - name: question-id
            in: path
            required: true
            schema:
              type: integer
        responses:
          '204':
            description: Success
    
    /surveys/{survey-id}/questions/{question-id}/answers:
      get:
        summary: get List of Answers
        operationId: getListAnswers
        tags:
          - answer
        parameters:
          - name: survey-id
            in: path
            required: true
            schema:
              type: integer
          - name: question-id
            in: path
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Answers'
      post:
        summary: create Answer for a Question
        operationId: createAnswer
        tags:
          - answer
        parameters:
          - name: survey-id
            in: path
            required: true
            schema:
              type: integer
          - name: question-id
            in: path
            required: true
            schema:
              type: integer
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAnswerRequest'
        responses:
          '201':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Answer'
    /surveys/{survey-id}/questions/{question-id}/answer/{answer-id}:
      get:
        summary: get Answer for a Question
        operationId: getAnswer
        tags:
          - answer
        parameters:
          - name: survey-id
            in: path
            required: true
            schema:
              type: integer
          - name: question-id
            in: path
            required: true
            schema:
              type: integer
          - name: answer-id
            in: path
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Answer'
      
components:
  schemas:
    Survey:
      type: object
      required:
        - id
        - name
        - start_date
        - end_date
        - published
      properties:
        id:
          type: integer
        name:
          type: string
        start_date:
          type: number
        end_date:
          type: number
        published:
          type: boolean
    Surveys:
      type: object
      properties:
        prev:
          type: string
        next:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Survey'
    CreateSurveyRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        start_date:
          type: number
        end_date:
          type: number

    QuestionOpenEnd:
      type: object
      required:
        - id
        - question
      properties:
        id:
          type: integer
        question:
          type: string
    QuestionOpenEnds:
      type: object
      properties:
        prev:
          type: string
        next:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/QuestionOpenEnd'
    CreateQuestionOpenEndRequest:
      type: object
      required:
        - question
      properties:
        question:
          type: string

    QuestionRating:
      type: object
      required:
        - id
        - question
      properties:
        id:
          type: integer
        question:
          type: string
    QuestionRatings:
      type: object
      properties:
        prev:
          type: string
        next:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/QuestionRating'
    CreateQuestionRatingRequest:
      type: object
      required:
        - question
      properties:
        question:
          type: string

    QuestionMultipleChoice:
      type: object
      required:
        - id
        - question
        - answers
      properties:
        id:
          type: integer
        question:
          type: string
        answers:
            type: array
            items:
              $ref: '#/components/schemas/MultipleChoice'

    QuestionMultipleChoices:
      type: object
      properties:
        prev:
          type: string
        next:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/QuestionMultipleChoice'
    CreateQuestionMultipleChoiceRequest:
      type: object
      required:
        - question
        - answers
      properties:
        question:
          type: string
        answers:
          type: array
          items:
            $ref: '#/components/schemas/MultipleChoice'

    MultipleChoice:
        type: object
        required:
          - id
          - question_id
          - answer
        properties:
          id:
            type: integer
          question_id:
            type: integer
          answer:
            type: string
    MultipleChoices:
      type: object
      properties:
        prev:
          type: string
        next:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/MultipleChoice'
    CreateMultipleChoiceRequest:
      type: object
      required:
        - question_id
        - answer
      properties:
        question_id:
          type: integer
        answer:
          type: string

    Answer:
      type: object
      required:
        - id
        - question_id
        - answer
      properties:
        id:
          type: integer
        question_id:
          type: integer
        answer:
          type: string
    Answers:
      type: object
      properties:
        prev:
          type: string
        next:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Answer'
    CreateAnswerRequest:
      type: object
      required:
        - question_id
        - answer
      properties:
        question_id:
          type: integer
        answer:
          type: string
